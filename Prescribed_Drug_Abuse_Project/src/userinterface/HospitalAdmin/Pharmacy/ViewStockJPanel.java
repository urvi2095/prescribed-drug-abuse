/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.HospitalAdmin.Pharmacy;

import Business.Drug;
import Business.EcoSystem;
import Business.Organization.Organization;
import Business.Organization.PharmacyOrganization;
import Business.Role.PharmacyManager;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.SupplierWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author urvi
 */
public class ViewStockJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewStockJPanel
     */
    private JPanel userProcessContainer;
    private UserAccount account;
    private PharmacyOrganization organization;
    private EcoSystem business;
    public ViewStockJPanel(JPanel userProcessContainer, UserAccount account, Organization organization, EcoSystem business) {
        initComponents();
        this.business = business;
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.organization = (PharmacyOrganization)organization;
        populateAvailabilitytable();
        populateQuantity();
    }

    public void populateQuantity(){
        PharmacyManager role = (PharmacyManager) account.getRole();
        for (WorkRequest workRequest : account.getWorkQueue().getWorkRequestList()) {
            //System.out.println("inside for1");
            int temp=0;
            // HashMap<WorkRequest,Integer> map = new HashMap<WorkRequest,Integer>();
            if (workRequest instanceof SupplierWorkRequest) {
                if (workRequest.getStatus().equals("Complete") && !((SupplierWorkRequest) workRequest).isAdd()) {
                    //System.out.println("inside if1");
                    String drug = ((SupplierWorkRequest) workRequest).getDrugName();//drug ordered name..
                    for(Drug d : role.getPharmacyDrugList().getListOfDrugs()) {
                        //System.out.println("inside for2");
                        if(drug.equals(d.getDrug_name())){
                            //System.out.println("inside if4");
                            temp = 1;
                            d.setAvailability(((SupplierWorkRequest) workRequest).getOrderedQuantity() + d.getAvailability());
                        }
                    }
                    if (temp == 0) {
                        //System.out.println("inside if2");
                        Drug dru = new Drug();
                        //System.out.println(role.getPharmacyDrugList().getListOfDrugs().size());
                        dru = role.getPharmacyDrugList().addDrug();
                        //System.out.println(role.getPharmacyDrugList());
                        
                       dru.setDrug_name(drug);
                       dru.setAvailability(((SupplierWorkRequest) workRequest).getOrderedQuantity());
                    }
                    
                    //}
                    ((SupplierWorkRequest) workRequest).setAdd(true);
                    //}
                }
            }
            populateAvailabilitytable();
        }
    }
    
    public void populateAvailabilitytable(){
        DefaultTableModel model = (DefaultTableModel)availableTable.getModel();
        model.setRowCount(0);
         //System.out.println("pharmacy"+ p.getVaccine().getVaccineList().size());
        PharmacyManager role = (PharmacyManager)account.getRole();
        for (Drug drug : role.getPharmacyDrugList().getListOfDrugs()){
            Object[] row = new Object[2];
            row[0] = drug;
            row[1] = drug.getAvailability();
            model.addRow(row);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        availableTable = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        availableTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Drug Name", "Available Quantity"
            }
        ));
        jScrollPane1.setViewportView(availableTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 99, 687, 133));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel5.setText("Medicines Available");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(284, 57, -1, 30));

        jButton1.setBackground(new java.awt.Color(102, 204, 255));
        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton1.setText("<<Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 480, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable availableTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
