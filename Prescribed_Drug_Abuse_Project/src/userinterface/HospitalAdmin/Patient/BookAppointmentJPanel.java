/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.HospitalAdmin.Patient;

import Business.EcoSystem;
import Business.Enterprise.DistributorEnterprise;
import Business.Enterprise.Enterprise;
import Business.Enterprise.HospitalEnterprise;
import Business.Network.Network;
import Business.Organization.DoctorOrganization;
import Business.Organization.Organization;
import Business.Role.DoctorRole;
import Business.Role.PatientRole;
import Business.Role.Role;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.AppointmentWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author urvi
 */
public class BookAppointmentJPanel extends javax.swing.JPanel {

    /**
     * Creates new form BookAppointmentJPanel
     */
    private Enterprise enterprise;
    private JPanel userProcessContainer;
    private UserAccount account;
    private Organization organization;
    private EcoSystem business;
    public String spec;
    private static int count = 1;
    private int id;
    
    public BookAppointmentJPanel(JPanel userProcessContainer,UserAccount account, Organization organization,Enterprise enterprise, EcoSystem business) {
        initComponents();
        this.business = business;
        this.account = account;
        this.organization = organization;
        this.enterprise = enterprise;
        this.userProcessContainer = userProcessContainer;
        id = count;
        count++;
        jTextField1.setText(String.valueOf(id));
        TimmingsPanel.setVisible(false);
        //checkDate(date);
        //checkTime(time);
    }
    
    public boolean checkDate(String date, UserAccount acc){
        DateFormat df = new SimpleDateFormat("MM-dd-yyyy");
        for(WorkRequest wr : acc.getWorkQueue().getWorkRequestList()){
                if(wr  instanceof  AppointmentWorkRequest){
                    String viewAptDate =  df.format(((AppointmentWorkRequest) wr).getAppointmentDate());
                    String selected = df.format(AptDate.getDate()); 
                    String time = ((AppointmentWorkRequest) wr).getAppointmentTime();
                   if(viewAptDate.equals(selected))
                   {    
                       if(acc.getRole() instanceof PatientRole){
                         JOptionPane.showMessageDialog(null, "You have appointment on this date at "+ time);
                         boxTime.removeItem(time);
                         return true;
                       }
                       else if(acc.getRole() instanceof DoctorRole){
                           JOptionPane.showMessageDialog(null, "Your Doctor has an appointment on this date at "+ time);
                           boxTime.removeItem(time);
                           return true;
                       }
                       return false;
                   }
                }   
            }
        return true;
    }
    
    public boolean checkTime(String time, UserAccount acc){
        DateFormat df = new SimpleDateFormat("MM-dd-yyyy");
        for(WorkRequest wr : acc.getWorkQueue().getWorkRequestList()){
                if(wr  instanceof  AppointmentWorkRequest){
                    String viewAptTime = ((AppointmentWorkRequest) wr).getAppointmentTime();
                    String selectedTime = boxTime.getSelectedItem().toString();
                   if(viewAptTime.equals(selectedTime))
                   {
                        String date = df.format(((AppointmentWorkRequest) wr).getAppointmentDate());
                       if(checkDate(date,acc)){
                       return true;
                   }
                       else{
                       return false;
                           }
                   }
                }   
            }
        return true;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        boxCategory = new javax.swing.JComboBox<>();
        comboDoc = new javax.swing.JComboBox<>();
        btnTime = new javax.swing.JButton();
        TimmingsPanel = new javax.swing.JPanel();
        btnBookApt = new javax.swing.JButton();
        boxTime = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jButton13 = new javax.swing.JButton();
        AptDate = new com.toedter.calendar.JDateChooser();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel1.setText("Appointment ID:");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 50, -1, -1));

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel2.setText("Category:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 100, -1, -1));

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel3.setText("Doctor:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 160, -1, -1));

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel4.setText("Date:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 210, -1, -1));

        jTextField1.setEditable(false);
        jTextField1.setEnabled(false);
        add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 40, 256, -1));

        boxCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cancer", "Ortho", "Pysician", "opthal", "Cardiac" }));
        boxCategory.setSelectedIndex(-1);
        boxCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxCategoryActionPerformed(evt);
            }
        });
        add(boxCategory, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 100, 256, -1));

        comboDoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                comboDocMouseClicked(evt);
            }
        });
        comboDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboDocActionPerformed(evt);
            }
        });
        add(comboDoc, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 160, 256, -1));

        btnTime.setBackground(new java.awt.Color(102, 204, 255));
        btnTime.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        btnTime.setText("Check Timmings");
        btnTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimeActionPerformed(evt);
            }
        });
        add(btnTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 270, -1, 38));

        TimmingsPanel.setBackground(new java.awt.Color(255, 255, 255));
        TimmingsPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        TimmingsPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnBookApt.setBackground(new java.awt.Color(102, 204, 255));
        btnBookApt.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        btnBookApt.setText("Book Appointment");
        btnBookApt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBookAptActionPerformed(evt);
            }
        });
        TimmingsPanel.add(btnBookApt, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 90, 220, 40));

        boxTime.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "4-4.30", "4.30-5", "5-5.30", "5.30-6" }));
        boxTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxTimeActionPerformed(evt);
            }
        });
        TimmingsPanel.add(boxTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 20, 250, 30));

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel5.setText("Time :  ");
        TimmingsPanel.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 20, 110, 30));

        add(TimmingsPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 330, 707, -1));

        jButton13.setBackground(new java.awt.Color(102, 204, 255));
        jButton13.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jButton13.setText("<<Back");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        add(jButton13, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 503, 102, -1));
        add(AptDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 210, 256, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        Component[] component1=userProcessContainer.getComponents();
        Component component=component1[component1.length - 1];
        PatientWorkAreaJPanel patientWorkAreaJPanel=(PatientWorkAreaJPanel)component;
        patientWorkAreaJPanel.populatePrescriptions();
        patientWorkAreaJPanel.populateAppointment();
        CardLayout cardLayout=(CardLayout)userProcessContainer.getLayout();
        cardLayout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton13ActionPerformed

    private void boxCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxCategoryActionPerformed
        // TODO add your handling code here:
        Role role=null;
        comboDoc.removeAllItems();
        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
            if(organization instanceof DoctorOrganization){
                for(UserAccount ua : organization.getUserAccountDirectory().getUserAccountList()){
                    role= ua.getRole();
                    if(role instanceof DoctorRole){
                        spec = (String)boxCategory.getSelectedItem();
                        String special=(String)((DoctorRole) role).getSpecialization();
                        if(spec.equals(special)){
                            comboDoc.addItem(((DoctorRole) role).getFname());
                        }
                    }
                }
            }
        }
        if(((DoctorRole)role).getFname().equals(null)){
            JOptionPane.showMessageDialog(null, "There are no doctors in this Hospital yet.");
        }
        
        
    }//GEN-LAST:event_boxCategoryActionPerformed

    private void comboDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboDocActionPerformed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_comboDocActionPerformed

    private void btnBookAptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBookAptActionPerformed
        // TODO add your handling code here:
        UserAccount ua1=null;
        for(Network n:business.getNetworkList()){
            for(Enterprise e:n.getEnterpriseDirectory().getEnterpriseList()){
                if(e instanceof HospitalEnterprise){
                    for (Organization organization : e.getOrganizationDirectory().getOrganizationList()){
                        if (organization instanceof DoctorOrganization){
                            for(UserAccount ua : organization.getUserAccountDirectory().getUserAccountList()){
                                Role role= ua.getRole();
                                    if(role instanceof DoctorRole){
                                        if(comboDoc.getSelectedItem().equals(((DoctorRole) role).getFname())){
                                            
                                            ua1 = ua; 
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }  
        
       // boolean checkPat = checkDate(AptDate.getDate().toString(), account);
       // boolean checkDoc = checkDate(AptDate.getDate().toString(), ua1);
        boolean checkPatTime = checkTime(AptDate.getDate().toString(), account);
        boolean checkDocTime = checkTime(AptDate.getDate().toString(), ua1);
        if(checkPatTime == true && checkDocTime == true){
        AppointmentWorkRequest request = new AppointmentWorkRequest();
        request.setSender(account);
        request.setStatus("Appointment requested");
        request.setAppointmentDate(AptDate.getDate());
        request.setAppointmentTime(String.valueOf(boxTime.getSelectedItem()));
        Organization org = null;
        
        if (ua1!=null){
            
            System.out.println(ua1);
            request.setReceiver(ua1);
            account.getWorkQueue().getWorkRequestList().add(request);
            ua1.getWorkQueue().getWorkRequestList().add(request);
            
        }
        
        JOptionPane.showMessageDialog(null, "Appointment Requested");
        }
        else if(checkPatTime == false ){
            JOptionPane.showMessageDialog(null,"Not freee");
        }

    }//GEN-LAST:event_btnBookAptActionPerformed

    private void btnTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimeActionPerformed
        // TODO add your handling code here:
        UserAccount ua1=null;
        for(Network n:business.getNetworkList()){
            for(Enterprise e:n.getEnterpriseDirectory().getEnterpriseList()){
                if(e instanceof HospitalEnterprise){
                    for (Organization organization : e.getOrganizationDirectory().getOrganizationList()){
                        if (organization instanceof DoctorOrganization){
                            for(UserAccount ua : organization.getUserAccountDirectory().getUserAccountList()){
                                Role role= ua.getRole();
                                    if(role instanceof DoctorRole){
                                        if(comboDoc.getSelectedItem()!=null){
                                        if(comboDoc.getSelectedItem().equals(((DoctorRole) role).getFname())){
                                            
                                            ua1 = ua; 
                                        }
                                        }
//                                        else
//                                        {
//                                            JOptionPane.showMessageDialog(null, "There are no doctor in the hospital with this speciaslization");
//                                            break;
//                                        }
                                }
                            }
                        }
                    }
                }
            }
        } 
        boolean checkPat = checkDate(AptDate.getDate().toString(), account);
        boolean checkDoc = checkDate(AptDate.getDate().toString(), ua1);
        if(checkPat == true && checkDoc == true){
            TimmingsPanel.setVisible(true);
        }
        else if(checkPat == false ){
            JOptionPane.showMessageDialog(null,"There is already an appointment scheduled for this date. Please select another date");
        }
    }//GEN-LAST:event_btnTimeActionPerformed

    private void boxTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxTimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_boxTimeActionPerformed

    private void comboDocMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboDocMouseClicked
        // TODO add your handling code here:
         if(comboDoc.getSelectedItem()==null){
           JOptionPane.showMessageDialog(null, "No doctor yet");
           btnBookApt.setVisible(false);
           btnTime.setVisible(false);
        }
         else
         {
             btnBookApt.setVisible(true);
           btnTime.setVisible(true);
         }
    }//GEN-LAST:event_comboDocMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser AptDate;
    private javax.swing.JPanel TimmingsPanel;
    private javax.swing.JComboBox<String> boxCategory;
    private javax.swing.JComboBox<String> boxTime;
    private javax.swing.JButton btnBookApt;
    private javax.swing.JButton btnTime;
    private javax.swing.JComboBox<Object> comboDoc;
    private javax.swing.JButton jButton13;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
