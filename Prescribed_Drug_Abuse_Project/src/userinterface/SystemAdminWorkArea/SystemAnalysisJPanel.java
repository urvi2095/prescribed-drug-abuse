/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SystemAdminWorkArea;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.Organization.PharmacyOrganization;
import Business.Role.PharmacyManager;
import Business.UserAccount.UserAccount;
import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.awt.Color;
import javax.swing.JPanel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author urvi
 */
public class SystemAnalysisJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SystemAnalysisJPanel
     */
    private JPanel userProcessContainer;
    private EcoSystem system;
    public SystemAnalysisJPanel(JPanel userProcessContainer, EcoSystem system) {
        initComponents();
        this.system = system;
        this.userProcessContainer = userProcessContainer;
        panelLineChart.setVisible(false);
       
    }
    
    public void calculateStats(){
        DefaultPieDataset pieDataset = new DefaultPieDataset();
        float overalltotal = 0;
        for(Network ne : system.getNetworkList()){
            int check =0;
            for(Enterprise ent : ne.getEnterpriseDirectory().getEnterpriseList()){
                for(Organization org : ent.getOrganizationDirectory().getOrganizationList()){
                    for(UserAccount ua : org.getUserAccountDirectory().getUserAccountList()){
                        if(ua.getRole() instanceof PharmacyManager){
                            check++;
                        }
                    }
                }
            }
            overalltotal = overalltotal + check;
            System.out.println(overalltotal);
        }
        
        for(Network ne : system.getNetworkList()){
            int value = 0;
            int input = 0;
            for(Enterprise ent : ne.getEnterpriseDirectory().getEnterpriseList()){
                for(Organization org : ent.getOrganizationDirectory().getOrganizationList()){
                    for(UserAccount ua : org.getUserAccountDirectory().getUserAccountList()){
                        if(ua.getRole() instanceof PharmacyManager){
                            PharmacyManager role = (PharmacyManager) ua.getRole();
                            if(role.getTag()!=null){
                                if(role.getTag().equals("Bad")){
                                value++;
                                }
                            }
                        }
                    }
                }
            }
            System.out.println("Total number of bad pharmacies in Network "+ne+" are: "+value);
            //input = (value/overalltotal);
            //System.out.println(input+" input mila");
            pieDataset.setValue(ne.getName(), new Integer(value));
        }
        JFreeChart chart = ChartFactory.createPieChart3D("Pie Chart", pieDataset, true, true, true);
        PiePlot3D P = (PiePlot3D)chart.getPlot();
        //PiePlot P = (PiePlot) chart.getPlot();
        ChartFrame frame = new ChartFrame("Pie Chart", chart);
        frame.setVisible(true);
        frame.setSize(450, 500);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        btnView = new javax.swing.JButton();
        panelLineChart = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setBackground(new java.awt.Color(102, 204, 255));
        jButton1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jButton1.setText("View Bad Pharmacies across all Networks");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 120, 410, 50));

        btnView.setBackground(new java.awt.Color(102, 204, 255));
        btnView.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        btnView.setText("View Pharmacy Revenue Analysis ");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });
        add(btnView, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 60, 410, 50));

        panelLineChart.setLayout(new java.awt.BorderLayout());
        add(panelLineChart, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 131, -1, -1));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel1.setText("System Analysis");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 20, -1, -1));

        backJButton.setBackground(new java.awt.Color(102, 204, 255));
        backJButton.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 520, -1, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        calculateStats();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        panelLineChart.setVisible(true);
        DefaultCategoryDataset linechartdata = new DefaultCategoryDataset();        
        int input;      
        for(Network net : system.getNetworkList()){
            for(Enterprise ent : net.getEnterpriseDirectory().getEnterpriseList()){
                for(Organization org : ent.getOrganizationDirectory().getOrganizationList()){
                    if(org instanceof PharmacyOrganization){
                        for(UserAccount us : org.getUserAccountDirectory().getUserAccountList()){
                            if (us.getRole() instanceof PharmacyManager){
                            PharmacyManager role = (PharmacyManager) us.getRole();
                            input = role.getRevenue();
                            linechartdata.setValue(input,"Revenue",us.getUsername());
                            System.out.println(input);
                            System.out.println(us.getUsername());
                            }
                        }
                    }
                }
            }
        }

        JFreeChart lineChart = ChartFactory.createLineChart("Revenue Plot","Years","Revenue",linechartdata,PlotOrientation.VERTICAL,true,true,false);
        CategoryPlot linechrt = lineChart.getCategoryPlot();
        linechrt.setRangeGridlinePaint(Color.ORANGE);

        ChartPanel barPanel = new ChartPanel(lineChart);
        panelLineChart.removeAll();
        panelLineChart.add(barPanel,BorderLayout.CENTER);
        panelLineChart.validate();

    }//GEN-LAST:event_btnViewActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JButton btnView;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel panelLineChart;
    // End of variables declaration//GEN-END:variables
}
