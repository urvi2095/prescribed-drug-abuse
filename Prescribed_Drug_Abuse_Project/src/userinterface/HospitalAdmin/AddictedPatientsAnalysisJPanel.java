/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.HospitalAdmin;

import Business.Drug;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.Organization.PatientOrganization;
import Business.Patient.Addicted;
import Business.Role.PatientRole;
import Business.Role.Role;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.OrderMedicinesWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author hetashavi
 */
public class AddictedPatientsAnalysisJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AddictedPatientsAnalysisJPanel
     */
    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private EcoSystem business;
    public String drug;
    public AddictedPatientsAnalysisJPanel(JPanel userProcessContainer, Enterprise enterprise, EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.business= business;
        BarChartPanel.setVisible(false);
        for (Organization org : enterprise.getOrganizationDirectory().getOrganizationList()) {
            if (org instanceof PatientOrganization) {
                for (UserAccount us : org.getUserAccountDirectory().getUserAccountList()) {
                    if (us.getRole() instanceof PatientRole) {
                        PatientRole role = (PatientRole) us.getRole();
                        //System.out.println(((PatientRole) role).getFname());
                        populateTable((PatientRole) role);
                    }
                }
            }
        }   
    }

    public void populateTable(PatientRole p){
      DefaultTableModel model = (DefaultTableModel)tblDrugCheck.getModel();
      //model.setRowCount(0);
      
    for(Addicted ad : p.getAddictedDrugListObject().getListOfAddictedDrugs()){
                  Object row[] = new Object[5];
                  row[0] = ad.getDrugName();
                  row[1] = ad;
                  row[2] = ad.getAddictedQuantity();
                  row[3] = ad.getOrderscore();
                  row[4] = p.getFname();
                  model.addRow(row);
            }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDrugCheck = new javax.swing.JTable();
        BarChartPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        backjButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setBackground(new java.awt.Color(102, 204, 255));
        jButton1.setText("View Bar Chart");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(378, 209, 159, 43));

        tblDrugCheck.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Drug", "Addicted Drug", "Addcited Quantity", "Ordered Score", "Addcited Patient"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblDrugCheck);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(83, 54, 793, 137));

        BarChartPanel.setBackground(new java.awt.Color(255, 255, 255));
        BarChartPanel.setLayout(new java.awt.BorderLayout());
        add(BarChartPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 270, 793, 354));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel1.setText("List of all Patients taking an overdose");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(351, 26, -1, -1));

        backjButton1.setBackground(new java.awt.Color(102, 204, 255));
        backjButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        backjButton1.setText("<< Back");
        backjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButton1ActionPerformed(evt);
            }
        });
        add(backjButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 630, 112, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
//        DefaultCategoryDataset barchartdata = new DefaultCategoryDataset();
//        //barchartdata.setValue(WIDTH, WIDTH, PROPERTIES);
//        barchartdata.setValue(20000,”Contribution Amount”,”JANUARY”);
//        barchartdata.setValue(15000,”Contribution Amount”,”FEBRUARY”);
//        barchartdata.setValue(30000,”Contribution Amount”,”MARCH”);
//
//        JFreeChart barChart = ChartFactory.createBarChart('Church Contributions', 'Monthly', 'Contribution Amount', barchartdata, PlotOrientation.HORIZONTAL, false, true, false);
//        //JFreeChart barChart = ChartFactory.createBarChart(“Church Contributions”, “Monthly”, “Contribution Amount”,  barchartdata, PlotOrientation.VERTICAL,false, true, false);
//        CategoryPlot barchrt = barChart.getCategoryPlot();
//        barchrt.setRangeGridlinePaint(Color.orange);
//
//        ChartPanel barPanel = new ChartPanel(barChart);
//        panelChart.removeAll();
//        panelChart.add(barPanel,BorderLayout.CENTER);
//        panelChart.validate();
if(tblDrugCheck.getRowCount() == 0){
    JOptionPane.showMessageDialog(null, "There re no Patients currently addicted to any drug in this Enterprise.");
}else{
        BarChartPanel.setVisible(true);
        
        DefaultCategoryDataset barchartdata = new DefaultCategoryDataset();
        
        for(Drug dr: business.getDrugCatalog().getListOfDrugs()){
            int count = 0;
            for (Organization org : enterprise.getOrganizationDirectory().getOrganizationList()) {
            if (org instanceof PatientOrganization) {
                for (UserAccount us : org.getUserAccountDirectory().getUserAccountList()) {
                    if (us.getRole() instanceof PatientRole) {
                        PatientRole role = (PatientRole) us.getRole();
                        for (Addicted ad : ((PatientRole) role).getAddictedDrugListObject().getListOfAddictedDrugs()) {
                           if(ad.getAddictedDrug()!=null && dr.getDrug_name().equals(ad.getAddictedDrug())){
                               drug = dr.getDrug_name();
                               count++;
                               barchartdata.setValue(count, "No. of Patients Addicted", drug);
                               System.out.println("Count "+count+" Drug "+drug);
                           }   
                        }
                        
                    }
                }
            }
        }//break;
        }
        JFreeChart chart = ChartFactory.createBarChart("Patients Addicted Drug Analysis","Drugs","No. of Patients Addicted", barchartdata, PlotOrientation.VERTICAL, false, false, false);
        CategoryPlot catplot = chart.getCategoryPlot();
        catplot.setRangeGridlinePaint(Color.BLUE);
        ChartPanel chartpanel = new ChartPanel(chart);
        BarChartPanel.removeAll();
        BarChartPanel.add(chartpanel, BorderLayout.CENTER);
        BarChartPanel.validate();
}
    }//GEN-LAST:event_jButton1ActionPerformed

    private void backjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButton1ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backjButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel BarChartPanel;
    private javax.swing.JButton backjButton1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblDrugCheck;
    // End of variables declaration//GEN-END:variables
}
