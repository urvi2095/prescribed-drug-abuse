/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.HospitalAdmin.Patient;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.Role.PatientRole;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.AppointmentWorkRequest;
import Business.WorkQueue.OrderMedicinesWorkRequest;
import Business.WorkQueue.PrescriptionWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import userinterface.HospitalAdmin.CreatePatientRecordJPanel;
import userinterface.HospitalAdmin.Patient.BookAppointmentJPanel;

/**
 *
 * @author urvi
 */
public class PatientWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form PatientWorkAreaJPanel
     */
    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private Organization organization;
    private EcoSystem business;
    private Enterprise enterprise;
    public PatientWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, Organization organization, Enterprise enterprise, EcoSystem business) {
        initComponents();
        this.business = business;
        this.enterprise = enterprise;
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.organization = organization;
        lblName.setText(account.getEmployee().getFname());
        populatePrescriptions();
        populateAppointment();
    }

    public void  populateAppointment(){
        DefaultTableModel model = (DefaultTableModel)tblAppointment.getModel();
        model.setRowCount(0);
       
            //PatientRole pr = (PatientRole) userAccount.getRole();
            for (WorkRequest req : userAccount.getWorkQueue().getWorkRequestList()){
                if (req instanceof AppointmentWorkRequest) {
                        Object[] row = new Object[4];
                        row[0] = (WorkRequest) req;
                        row[1] = ((AppointmentWorkRequest) req).getReceiver();
                        row[2] = ((AppointmentWorkRequest) req).getAppointmentDate();
                        row[3] = ((AppointmentWorkRequest) req).getAppointmentTime();
                        model.addRow(row);
                    }
            //}
        }
    }
    
    public void populatePrescriptions(){
        DefaultTableModel model = (DefaultTableModel)tblPresc.getModel();
        model.setRowCount(0);
        
        for(WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()){
            if (request instanceof PrescriptionWorkRequest) {
            Object[] row = new Object[5];
            row[0] = ((PrescriptionWorkRequest) request);
            row[1] = ((PrescriptionWorkRequest) request).getPrescribedDrugQuantity();
            row[2] = request.getSender().getEmployee().getFname();
            row[3] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getFname();
            row[4] = request.getStatus();
            
            model.addRow(row);
        }
    }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        btnBookAppointment = new javax.swing.JButton();
        orderMedicine = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPresc = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblAppointment = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton2.setBackground(new java.awt.Color(102, 204, 255));
        jButton2.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jButton2.setText("Create HealthVault>>");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 130, 260, -1));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        jLabel1.setText("WELCOME");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 40, 130, 40));

        lblName.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        lblName.setText("PATIENT'S NAME!");
        add(lblName, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 40, 220, 40));

        btnBookAppointment.setBackground(new java.awt.Color(102, 204, 255));
        btnBookAppointment.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        btnBookAppointment.setText("Book an Appointment?");
        btnBookAppointment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBookAppointmentActionPerformed(evt);
            }
        });
        add(btnBookAppointment, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 260, -1));

        orderMedicine.setBackground(new java.awt.Color(102, 204, 255));
        orderMedicine.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        orderMedicine.setText("Order Medicines>>");
        orderMedicine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderMedicineActionPerformed(evt);
            }
        });
        add(orderMedicine, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 380, 210, -1));

        tblPresc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Prescribed Drug", "Drug Quantity", "Doctor", "Patient ", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblPresc.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblPresc);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 250, 720, 120));

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel2.setText("My Prescriptions");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 220, -1, -1));

        tblAppointment.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "status", "receiver doc", "date", "time"
            }
        ));
        jScrollPane2.setViewportView(tblAppointment);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 480, 710, 100));

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel3.setText("My Appointments");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 440, 130, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void btnBookAppointmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBookAppointmentActionPerformed
        // TODO add your handling code here:
        BookAppointmentJPanel bookAppointmentJPanel = new BookAppointmentJPanel(userProcessContainer, userAccount, organization,enterprise, business);
        userProcessContainer.add("bookAppointmentJPanel", bookAppointmentJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnBookAppointmentActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        CreatePatientRecordJPanel createPatientRecordJPanel = new CreatePatientRecordJPanel(userProcessContainer, userAccount, organization, business);
        userProcessContainer.add("createPatientRecordJPanel", createPatientRecordJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void orderMedicineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderMedicineActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblPresc.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a prescription to make an order!");
            return;
        }
        else{
            
        WorkRequest request = (WorkRequest)tblPresc.getValueAt(selectedRow, 0);
        if((request.getStatus()).equals("order is placed")){
            JOptionPane.showMessageDialog(null, "You have already completed your order for this prescription!");
            
        }
        else{
        //request.setReceiver(userAccount);
        
        //populatePrescriptions(); 
        
        OrderMedicinesJPanel orderMedicinesJPanel = new OrderMedicinesJPanel(userProcessContainer, userAccount, organization, enterprise, business,(PrescriptionWorkRequest) request);
        userProcessContainer.add("orderMedicinesJPanel", orderMedicinesJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        }
        }
    }//GEN-LAST:event_orderMedicineActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBookAppointment;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblName;
    private javax.swing.JButton orderMedicine;
    private javax.swing.JTable tblAppointment;
    private javax.swing.JTable tblPresc;
    // End of variables declaration//GEN-END:variables
}
